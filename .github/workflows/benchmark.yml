name: Benchmarks

on:
  workflow_dispatch:  # Allows manual triggering
  schedule:
    - cron: '0 2 * * *'  # UTC 2:00 AM = Beijing 10:00 AM

jobs:

  prepare-matrix:
    runs-on: ubuntu-latest
    outputs: 
      runners: ${{ steps.prepare-runners.outputs.runners }}
    steps:
      - uses: actions/checkout@v4
      - id: prepare-runners
        run: |
          runners="$(python3 benchmark/launch.py runners -q)"
          echo "runners=$runners" >> $GITHUB_OUTPUT

  run-benchmarks:
    strategy:
      fail-fast: false
      matrix:
        runner: ${{ fromJson(needs.prepare-matrix.outputs.runners) }}
        target: [ubuntu,macos,]
    runs-on: ${{ matrix.target }}-latest
    needs: prepare-matrix
    steps:
      - uses: actions/checkout@v4
      - name: Install latest rust stable toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          rustflags: "" # tquic use deprecated function, and this action set rustflags to "-D warnings" by default
      - name: Install go for macos runner
        if: matrix.target=='macos' && matrix.runner=='quic-go'
        run: brew install go
      - name: Run benchmarks
        run: |
          which openssl
          python3 benchmark/launch.py run ${{ matrix.runner }} --no-plot
      - name: Rename benchmark results dir
        run: mv benchmark/output benchmark-output-${{ matrix.target }}-${{ matrix.runner }}
      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          path: benchmark-output-${{ matrix.target }}-${{ matrix.runner }}
          name: benchmark-output-${{ matrix.target }}-${{ matrix.runner }}
  
  summary-results:
    runs-on: ubuntu-latest
    needs: [run-benchmarks]
    strategy:
      fail-fast: false
      matrix:
        target: [ubuntu, macos]
    steps:
      - uses: actions/checkout@v4
      - name: Install matplotlib
        run: |
          sudo apt update
          sudo apt install -y python3-matplotlib
      - name: Download outputs
        uses: actions/download-artifact@v4
        with:
          pattern: benchmark-output-${{ matrix.target }}-*
      - name: Summary ${{ matrix.target }}
        run: |
          # Collect all results.json paths and create a space-separated list
          results_files=$(find . -name "results.json" | tr '\n' ' ')
          echo "Results files: $results_files"

          # Pass all results files to the plot command
          python3 benchmark/launch.py plot $results_files

          # Collect logs
          cp -r */logs benchmark/output/
          mv benchmark/output/ benchmark-output-${{ matrix.target }}

      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          path: benchmark-output-${{ matrix.target }}
          name: benchmark-output-${{ matrix.target }}

